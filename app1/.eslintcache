[{"D:\\ReactJS\\Restaurant-app\\app1\\src\\index.js":"1","D:\\ReactJS\\Restaurant-app\\app1\\src\\serviceWorker.js":"2","D:\\ReactJS\\Restaurant-app\\app1\\src\\App.js":"3","D:\\ReactJS\\Restaurant-app\\app1\\src\\components\\MainComponent.js":"4","D:\\ReactJS\\Restaurant-app\\app1\\src\\redux\\configureStore.js":"5","D:\\ReactJS\\Restaurant-app\\app1\\src\\components\\HomeComponent.js":"6","D:\\ReactJS\\Restaurant-app\\app1\\src\\components\\DishdetailComponent.js":"7","D:\\ReactJS\\Restaurant-app\\app1\\src\\components\\MenuComponent.js":"8","D:\\ReactJS\\Restaurant-app\\app1\\src\\components\\HeaderComponent.js":"9","D:\\ReactJS\\Restaurant-app\\app1\\src\\components\\FooterComponent.js":"10","D:\\ReactJS\\Restaurant-app\\app1\\src\\components\\ContactComponent.js":"11","D:\\ReactJS\\Restaurant-app\\app1\\src\\components\\AboutComponent.js":"12","D:\\ReactJS\\Restaurant-app\\app1\\src\\redux\\ActionCreators.js":"13","D:\\ReactJS\\Restaurant-app\\app1\\src\\redux\\comments.js":"14","D:\\ReactJS\\Restaurant-app\\app1\\src\\redux\\dishes.js":"15","D:\\ReactJS\\Restaurant-app\\app1\\src\\redux\\leaders.js":"16","D:\\ReactJS\\Restaurant-app\\app1\\src\\redux\\promotions.js":"17","D:\\ReactJS\\Restaurant-app\\app1\\src\\redux\\forms.js":"18","D:\\ReactJS\\Restaurant-app\\app1\\src\\components\\LoadingComponent.js":"19","D:\\ReactJS\\Restaurant-app\\app1\\src\\redux\\ActionTypes.js":"20","D:\\ReactJS\\Restaurant-app\\app1\\src\\shared\\baseUrl.js":"21","D:\\ReactJS\\Restaurant-app\\app1\\src\\shared\\leaders.js":"22"},{"size":613,"mtime":1632195327880,"results":"23","hashOfConfig":"24"},{"size":5227,"mtime":1632195327896,"results":"25","hashOfConfig":"24"},{"size":476,"mtime":1632195327880,"results":"26","hashOfConfig":"24"},{"size":3855,"mtime":1632201931550,"results":"27","hashOfConfig":"24"},{"size":792,"mtime":1632195327880,"results":"28","hashOfConfig":"24"},{"size":1843,"mtime":1632211544272,"results":"29","hashOfConfig":"24"},{"size":8436,"mtime":1632212068872,"results":"30","hashOfConfig":"24"},{"size":1609,"mtime":1632195327880,"results":"31","hashOfConfig":"24"},{"size":4903,"mtime":1632195327880,"results":"32","hashOfConfig":"24"},{"size":397,"mtime":1632195327880,"results":"33","hashOfConfig":"24"},{"size":12338,"mtime":1632195327880,"results":"34","hashOfConfig":"24"},{"size":4444,"mtime":1632202734094,"results":"35","hashOfConfig":"24"},{"size":4076,"mtime":1632195327880,"results":"36","hashOfConfig":"24"},{"size":539,"mtime":1632195327880,"results":"37","hashOfConfig":"24"},{"size":598,"mtime":1632195327880,"results":"38","hashOfConfig":"24"},{"size":185,"mtime":1632195327880,"results":"39","hashOfConfig":"24"},{"size":683,"mtime":1632195327896,"results":"40","hashOfConfig":"24"},{"size":170,"mtime":1632195327880,"results":"41","hashOfConfig":"24"},{"size":299,"mtime":1632195327880,"results":"42","hashOfConfig":"24"},{"size":411,"mtime":1632195327880,"results":"43","hashOfConfig":"24"},{"size":48,"mtime":1632201960142,"results":"44","hashOfConfig":"24"},{"size":2350,"mtime":1632202598982,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"tp39wb",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"D:\\ReactJS\\Restaurant-app\\app1\\src\\index.js",[],["92","93"],"D:\\ReactJS\\Restaurant-app\\app1\\src\\serviceWorker.js",[],"D:\\ReactJS\\Restaurant-app\\app1\\src\\App.js",[],"D:\\ReactJS\\Restaurant-app\\app1\\src\\components\\MainComponent.js",[],"D:\\ReactJS\\Restaurant-app\\app1\\src\\redux\\configureStore.js",[],"D:\\ReactJS\\Restaurant-app\\app1\\src\\components\\HomeComponent.js",[],"D:\\ReactJS\\Restaurant-app\\app1\\src\\components\\DishdetailComponent.js",["94","95","96"],"D:\\ReactJS\\Restaurant-app\\app1\\src\\components\\MenuComponent.js",[],"D:\\ReactJS\\Restaurant-app\\app1\\src\\components\\HeaderComponent.js",[],"D:\\ReactJS\\Restaurant-app\\app1\\src\\components\\FooterComponent.js",[],"D:\\ReactJS\\Restaurant-app\\app1\\src\\components\\ContactComponent.js",["97","98","99","100","101","102","103","104","105","106"],"import React, { Component } from 'react';\r\nimport {Button, Label, Col, Row} from 'reactstrap';\r\nimport { Control, Form, Errors} from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: '',\r\n            agree: false,\r\n            contactType: 'Tel.',\r\n            message: ''\r\n        };\r\n\r\n        // this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        // this.handleBlur = this.handleBlur.bind(this);\r\n\r\n    }\r\n\r\n    // handleInputChange(event) {\r\n    //     const target = event.target;\r\n    //     const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    //     const name = target.name;\r\n\r\n    //     this.setState({\r\n    //         [name]: value\r\n    //     });\r\n    // }\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n        // event.preventDefault();\r\n    }\r\n    \r\n\r\n    // handleBlur = (field) => (evt) => {\r\n    //     this.setState({\r\n    //         touched: { ...this.state.touched, [field]: true }\r\n    //     });\r\n    // }\r\n\r\n    // validate(firstname, lastname, telnum, email) {\r\n    //     const errors = {\r\n    //         firstname: '',\r\n    //         lastname: '',\r\n    //         telnum: '',\r\n    //         email: ''\r\n    //     };\r\n\r\n    //     if (this.state.touched.firstname && firstname.length < 3)\r\n    //         errors.firstname = 'First Name should be >= 3 characters';\r\n    //     else if (this.state.touched.firstname && firstname.length > 10)\r\n    //         errors.firstname = 'First Name should be <= 10 characters';\r\n\r\n    //     if (this.state.touched.lastname && lastname.length < 3)\r\n    //         errors.lastname = 'Last Name should be >= 3 characters';\r\n    //     else if (this.state.touched.lastname && lastname.length > 10)\r\n    //         errors.lastname = 'Last Name should be <= 10 characters';\r\n\r\n    //     const reg = /^\\d+$/;\r\n    //     if (this.state.touched.telnum && !reg.test(telnum))\r\n    //         errors.telnum = 'Tel. Number should contain only numbers';\r\n\r\n    //     if(this.state.touched.email && email.split('').filter(x => x === '@').length !== 1)\r\n    //         errors.email = 'Email should contain a @';\r\n\r\n    //     return errors;\r\n    // }\r\n    render() {\r\n        // const errors = this.validate(this.state.firstname, this.state.lastname, this.state.telnum, this.state.email);\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 m-2\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            11/13 , Tulip Homes ,<br />\r\n                        Near Trimurti Chawk , Pune<br />\r\n                        Maharashtra , India<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:free@food.net\">free@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 m-2\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"#\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"#\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"#\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength:minLength(3),\r\n                                            maxLength:maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n\r\n                                        messages={{\r\n                                            required:\"-field is required \",\r\n                                            minLength:\"-text must be greater than length 3 \",\r\n                                            maxLength:\"-text must be less than length 15\"\r\n                                        }\r\n                                        }\r\n                                        />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","D:\\ReactJS\\Restaurant-app\\app1\\src\\components\\AboutComponent.js",[],"D:\\ReactJS\\Restaurant-app\\app1\\src\\redux\\ActionCreators.js",[],"D:\\ReactJS\\Restaurant-app\\app1\\src\\redux\\comments.js",[],"D:\\ReactJS\\Restaurant-app\\app1\\src\\redux\\dishes.js",[],"D:\\ReactJS\\Restaurant-app\\app1\\src\\redux\\leaders.js",[],"D:\\ReactJS\\Restaurant-app\\app1\\src\\redux\\promotions.js",[],"D:\\ReactJS\\Restaurant-app\\app1\\src\\redux\\forms.js",[],"D:\\ReactJS\\Restaurant-app\\app1\\src\\components\\LoadingComponent.js",[],"D:\\ReactJS\\Restaurant-app\\app1\\src\\redux\\ActionTypes.js",[],"D:\\ReactJS\\Restaurant-app\\app1\\src\\shared\\baseUrl.js",[],"D:\\ReactJS\\Restaurant-app\\app1\\src\\shared\\leaders.js",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":55,"column":34,"nodeType":"113","endLine":56,"endColumn":63},{"ruleId":"111","severity":1,"message":"114","line":71,"column":30,"nodeType":"113","endLine":80,"endColumn":38},{"ruleId":"111","severity":1,"message":"115","line":100,"column":34,"nodeType":"113","endLine":104,"endColumn":65},{"ruleId":"116","severity":1,"message":"117","line":106,"column":29,"nodeType":"113","endLine":106,"endColumn":83},{"ruleId":"116","severity":1,"message":"117","line":107,"column":29,"nodeType":"113","endLine":107,"endColumn":80},{"ruleId":"116","severity":1,"message":"117","line":108,"column":29,"nodeType":"113","endLine":108,"endColumn":83},{"ruleId":"111","severity":1,"message":"118","line":116,"column":37,"nodeType":"113","endLine":124,"endColumn":44},{"ruleId":"111","severity":1,"message":"118","line":142,"column":37,"nodeType":"113","endLine":148,"endColumn":44},{"ruleId":"111","severity":1,"message":"118","line":164,"column":37,"nodeType":"113","endLine":170,"endColumn":44},{"ruleId":"111","severity":1,"message":"118","line":187,"column":37,"nodeType":"113","endLine":193,"endColumn":44},{"ruleId":"111","severity":1,"message":"119","line":209,"column":45,"nodeType":"113","endLine":211,"endColumn":52},{"ruleId":"111","severity":1,"message":"112","line":217,"column":37,"nodeType":"113","endLine":218,"endColumn":66},{"ruleId":"111","severity":1,"message":"115","line":227,"column":37,"nodeType":"113","endLine":229,"endColumn":68},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component input must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]